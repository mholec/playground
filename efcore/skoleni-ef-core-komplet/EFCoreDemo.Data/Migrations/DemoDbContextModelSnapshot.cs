// <auto-generated />
using System;
using EFCoreDemo.Data.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace EFCoreDemo.Data.Migrations
{
    [DbContext(typeof(DemoDbContext))]
    partial class DemoDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("dbo")
                .HasAnnotation("ProductVersion", "2.1.0-rc1-32029")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("Relational:Sequence:dbo.OrderNumbers", "'OrderNumbers', 'dbo', '20180001', '1', '', '', 'Int32', 'False'")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("EFCoreDemo.Data.Models.Brand", b =>
                {
                    b.Property<int>("BrandId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BrandIdentifier")
                        .IsRequired();

                    b.Property<DateTime>("LastUpdated");

                    b.Property<int>("Numero")
                        .HasColumnType("nvarchar(200");

                    b.Property<byte[]>("Timestamp")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate();

                    b.Property<string>("Title")
                        .IsRequired();

                    b.HasKey("BrandId");

                    b.HasAlternateKey("BrandIdentifier")
                        .HasName("AlternateKey_BrandIdentifier");

                    b.HasIndex("BrandIdentifier")
                        .IsUnique();

                    b.ToTable("Brands");
                });

            modelBuilder.Entity("EFCoreDemo.Data.Models.Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Extras");

                    b.Property<string>("SeoLink")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.HasKey("CategoryId");

                    b.HasIndex("SeoLink")
                        .IsUnique()
                        .HasName("IX_Category_SeoLink");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("EFCoreDemo.Data.Models.CategoryDetail", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Url")
                        .HasColumnType("varchar(200)");

                    b.HasKey("CategoryId");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("EFCoreDemo.Data.Models.Image", b =>
                {
                    b.Property<int>("ImageId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ProductId");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<string>("Url");

                    b.HasKey("ImageId");

                    b.HasIndex("ProductId");

                    b.ToTable("Images");
                });

            modelBuilder.Entity("EFCoreDemo.Data.Models.Order", b =>
                {
                    b.Property<Guid>("OrderId");

                    b.Property<DateTime>("Created");

                    b.Property<int>("OrderNo")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("NEXT VALUE FOR dbo.OrderNumbers");

                    b.Property<int>("OrderState")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(2);

                    b.HasKey("OrderId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("EFCoreDemo.Data.Models.OrderItem", b =>
                {
                    b.Property<int>("OrderItemId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Amount");

                    b.Property<Guid>("OrderId");

                    b.Property<int?>("OriginalProductId");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.HasKey("OrderItemId");

                    b.HasIndex("OrderId");

                    b.HasIndex("OriginalProductId");

                    b.ToTable("OrderItem");
                });

            modelBuilder.Entity("EFCoreDemo.Data.Models.Person", b =>
                {
                    b.Property<int>("DepartmentEmployeeIdentifier");

                    b.Property<int>("DepartmentIdentifier");

                    b.HasKey("DepartmentEmployeeIdentifier", "DepartmentIdentifier");

                    b.ToTable("Persons");
                });

            modelBuilder.Entity("EFCoreDemo.Data.Models.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BrandIdentifier")
                        .IsRequired();

                    b.Property<int>("ProductType");

                    b.Property<string>("ProductWarehouseIdent")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("nvarchar(200)")
                        .HasComputedColumnSql("'PRD-' + [SeoLink]");

                    b.Property<string>("SeoLink")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.HasKey("ProductId");

                    b.HasIndex("BrandIdentifier");

                    b.HasIndex("SeoLink")
                        .IsUnique();

                    b.ToTable("Products");

                    b.HasDiscriminator<int>("ProductType").HasValue(0);
                });

            modelBuilder.Entity("EFCoreDemo.Data.Models.ProductCategory", b =>
                {
                    b.Property<int>("ProductId");

                    b.Property<int>("CategoryId");

                    b.HasKey("ProductId", "CategoryId");

                    b.HasIndex("CategoryId");

                    b.ToTable("ProductCategories");
                });

            modelBuilder.Entity("EFCoreDemo.Data.Models.Relation", b =>
                {
                    b.Property<int>("RelationId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ObjectId");

                    b.Property<int>("ObjectType");

                    b.Property<int>("SourceObjectId");

                    b.Property<int>("SourceObjectType");

                    b.HasKey("RelationId");

                    b.ToTable("Relations");
                });

            modelBuilder.Entity("EFCoreDemo.Data.Models.RssProduct", b =>
                {
                    b.HasBaseType("EFCoreDemo.Data.Models.Product");

                    b.Property<string>("RssDescritpion");

                    b.ToTable("RssProduct");

                    b.HasDiscriminator().HasValue(1);
                });

            modelBuilder.Entity("EFCoreDemo.Data.Models.CategoryDetail", b =>
                {
                    b.HasOne("EFCoreDemo.Data.Models.Category", "Category")
                        .WithOne("CategoryDetail")
                        .HasForeignKey("EFCoreDemo.Data.Models.CategoryDetail", "CategoryId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("EFCoreDemo.Data.Models.Image", b =>
                {
                    b.HasOne("EFCoreDemo.Data.Models.Product", "Product")
                        .WithMany("Images")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("EFCoreDemo.Data.Models.Order", b =>
                {
                    b.OwnsOne("EFCoreDemo.Data.Models.Address", "BillingAddress", b1 =>
                        {
                            b1.Property<Guid>("OrderId");

                            b1.Property<string>("Email");

                            b1.Property<string>("FirstName");

                            b1.Property<string>("LastName");

                            b1.ToTable("Orders","dbo");

                            b1.HasOne("EFCoreDemo.Data.Models.Order")
                                .WithOne("BillingAddress")
                                .HasForeignKey("EFCoreDemo.Data.Models.Address", "OrderId")
                                .OnDelete(DeleteBehavior.Cascade);
                        });

                    b.OwnsOne("EFCoreDemo.Data.Models.Address", "ShippingAddress", b1 =>
                        {
                            b1.Property<Guid>("OrderId");

                            b1.Property<string>("FirstName");

                            b1.Property<string>("LastName");

                            b1.ToTable("Orders","dbo");

                            b1.HasOne("EFCoreDemo.Data.Models.Order")
                                .WithOne("ShippingAddress")
                                .HasForeignKey("EFCoreDemo.Data.Models.Address", "OrderId")
                                .OnDelete(DeleteBehavior.Cascade);
                        });

                    b.OwnsOne("EFCoreDemo.Data.Models.Price", "Price", b1 =>
                        {
                            b1.Property<Guid>("OrderId");

                            b1.Property<decimal>("BasePrice");

                            b1.Property<decimal>("VatRate");

                            b1.ToTable("Orders","dbo");

                            b1.HasOne("EFCoreDemo.Data.Models.Order")
                                .WithOne("Price")
                                .HasForeignKey("EFCoreDemo.Data.Models.Price", "OrderId")
                                .OnDelete(DeleteBehavior.Cascade);
                        });
                });

            modelBuilder.Entity("EFCoreDemo.Data.Models.OrderItem", b =>
                {
                    b.HasOne("EFCoreDemo.Data.Models.Order", "Order")
                        .WithMany("OrderItems")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("EFCoreDemo.Data.Models.Product", "OriginalProduct")
                        .WithMany()
                        .HasForeignKey("OriginalProductId");

                    b.OwnsOne("EFCoreDemo.Data.Models.Price", "Price", b1 =>
                        {
                            b1.Property<int>("OrderItemId")
                                .ValueGeneratedOnAdd()
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<decimal>("BasePrice");

                            b1.Property<decimal>("VatRate");

                            b1.ToTable("OrderItem","dbo");

                            b1.HasOne("EFCoreDemo.Data.Models.OrderItem")
                                .WithOne("Price")
                                .HasForeignKey("EFCoreDemo.Data.Models.Price", "OrderItemId")
                                .OnDelete(DeleteBehavior.Cascade);
                        });

                    b.OwnsOne("EFCoreDemo.Data.Models.Price", "TotalPrice", b1 =>
                        {
                            b1.Property<int>("OrderItemId")
                                .ValueGeneratedOnAdd()
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<decimal>("BasePrice");

                            b1.Property<decimal>("VatRate");

                            b1.ToTable("OrderItem","dbo");

                            b1.HasOne("EFCoreDemo.Data.Models.OrderItem")
                                .WithOne("TotalPrice")
                                .HasForeignKey("EFCoreDemo.Data.Models.Price", "OrderItemId")
                                .OnDelete(DeleteBehavior.Cascade);
                        });
                });

            modelBuilder.Entity("EFCoreDemo.Data.Models.Product", b =>
                {
                    b.HasOne("EFCoreDemo.Data.Models.Brand", "Brand")
                        .WithMany("Products")
                        .HasForeignKey("BrandIdentifier")
                        .HasPrincipalKey("BrandIdentifier")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.OwnsOne("EFCoreDemo.Data.Models.Price", "Price", b1 =>
                        {
                            b1.Property<int>("ProductId")
                                .ValueGeneratedOnAdd()
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<decimal>("BasePrice")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("decimal(10, 2)")
                                .HasDefaultValue(0m);

                            b1.Property<decimal>("VatRate")
                                .HasColumnType("decimal(4, 3)");

                            b1.ToTable("Products","dbo");

                            b1.HasOne("EFCoreDemo.Data.Models.Product")
                                .WithOne("Price")
                                .HasForeignKey("EFCoreDemo.Data.Models.Price", "ProductId")
                                .OnDelete(DeleteBehavior.Cascade);
                        });
                });

            modelBuilder.Entity("EFCoreDemo.Data.Models.ProductCategory", b =>
                {
                    b.HasOne("EFCoreDemo.Data.Models.Category", "Category")
                        .WithMany("ProductCategories")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("EFCoreDemo.Data.Models.Product", "Product")
                        .WithMany("ProductCategories")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
